[{"D:\\daffa\\projects\\pstore-mern\\client\\src\\index.js":"1","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\App.js":"2","D:\\daffa\\projects\\pstore-mern\\client\\src\\_reducers\\index.js":"3","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"4","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"6","D:\\daffa\\projects\\pstore-mern\\client\\src\\hoc\\auth.js":"7","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\Footer\\Footer.js":"8","D:\\daffa\\projects\\pstore-mern\\client\\src\\_reducers\\user_reducer.js":"9","D:\\daffa\\projects\\pstore-mern\\client\\src\\_actions\\types.js":"10","D:\\daffa\\projects\\pstore-mern\\client\\src\\_actions\\user_actions.js":"11","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\Config.js":"12","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\Navbar\\NavBar.js":"13","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\utils\\FileUpload.js":"14","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\LandingPage\\Sections\\SearchFeature.js":"15","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\DetailProductPage\\DetailProductPage.js":"16","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\DetailProductPage\\Sections\\ProductInfo.js":"17","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\DetailProductPage\\Sections\\ProductImage.js":"18","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\CartPage.js":"19","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\utils\\Paypal.js":"20","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\Sections\\UserCartBlock.js":"21","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\Sections\\Result.js":"22","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\Sections\\Empty.js":"23"},{"size":1200,"mtime":1606989591365,"results":"24","hashOfConfig":"25"},{"size":1276,"mtime":1607078057083,"results":"26","hashOfConfig":"25"},{"size":164,"mtime":1607005508801,"results":"27","hashOfConfig":"25"},{"size":7295,"mtime":1607005211338,"results":"28","hashOfConfig":"25"},{"size":5046,"mtime":1607074538129,"results":"29","hashOfConfig":"25"},{"size":4278,"mtime":1607068264674,"results":"30","hashOfConfig":"25"},{"size":1194,"mtime":1606985987360,"results":"31","hashOfConfig":"25"},{"size":3019,"mtime":1607082078250,"results":"32","hashOfConfig":"25"},{"size":1325,"mtime":1607005491334,"results":"33","hashOfConfig":"25"},{"size":404,"mtime":1606986516893,"results":"34","hashOfConfig":"25"},{"size":2644,"mtime":1606989065265,"results":"35","hashOfConfig":"25"},{"size":42,"mtime":1607005335702,"results":"36","hashOfConfig":"25"},{"size":3651,"mtime":1607077024268,"results":"37","hashOfConfig":"25"},{"size":2330,"mtime":1607064476886,"results":"38","hashOfConfig":"25"},{"size":620,"mtime":1607066335903,"results":"39","hashOfConfig":"25"},{"size":1332,"mtime":1607076659290,"results":"40","hashOfConfig":"25"},{"size":1006,"mtime":1607076301035,"results":"41","hashOfConfig":"25"},{"size":695,"mtime":1607076569082,"results":"42","hashOfConfig":"25"},{"size":3542,"mtime":1607141035324,"results":"43","hashOfConfig":"25"},{"size":2822,"mtime":1607077289469,"results":"44","hashOfConfig":"25"},{"size":1476,"mtime":1607082207939,"results":"45","hashOfConfig":"25"},{"size":695,"mtime":1607081915072,"results":"46","hashOfConfig":"25"},{"size":674,"mtime":1607081855238,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1gwy8nt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\daffa\\projects\\pstore-mern\\client\\src\\index.js",[],["103","104"],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\App.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\_reducers\\index.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["105","106","107","108"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        address: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string().required(\"Name is required\"),\r\n        address: Yup.string().required(\"Address Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            address: values.address,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"container\">\r\n            <h3 className=\"text-center\">Register</h3>\r\n            <div className=\"row d-flex justify-content-center\">\r\n              <div className=\"col-md-4\">\r\n                <form {...formItemLayout} onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={\r\n                        errors.name && touched.name\r\n                          ? \"form-control is-valid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"name\"\r\n                      placeholder=\"Name\"\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n\r\n                    {errors.name && touched.name && (\r\n                      <div className=\"text-danger\">{errors.name}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label for=\"\">Email address</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className={\r\n                        errors.email && touched.email\r\n                          ? \"form-control is-valid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"text-danger\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label for=\"\">Address</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={\r\n                        errors.address && touched.address\r\n                          ? \"form-control is-valid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"address\"\r\n                      placeholder=\"Address\"\r\n                      value={values.address}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n\r\n                    {errors.address && touched.address && (\r\n                      <div className=\"text-danger\">{errors.address}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label for=\"exampleInputPassword1\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"password\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={\r\n                        errors.password && touched.password\r\n                          ? \"form-control is-valid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      placeholder=\"Password\"\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                      <div className=\"text-danger\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label for=\"exampleInputPassword1\">Confirm Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      value={values.confirmPassword}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={\r\n                        errors.confirmPassword && touched.confirmPassword\r\n                          ? \"form-control is-valid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"confirmPassword\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                    {errors.confirmPassword && touched.confirmPassword && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.confirmPassword}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <button\r\n                    onClick={handleSubmit}\r\n                    type=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    className=\"btn my-btn\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["109","110","111","112","113","114","115","116","117","118","119"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")\r\n    : \"\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem(\"userId\", response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.id);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"Check out your Account or Password again\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setFormErrorMessage(\"Check out your Account or Password again\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <h3 className=\"text-center\">Login</h3>\r\n            <div className=\"row d-flex justify-content-center\">\r\n              <div className=\"col-md-4\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className={\r\n                        errors.email && touched.email\r\n                          ? \"form-control is-valid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"email\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      aria-describedby=\"emailHelp\"\r\n                      placeholder=\"Email\"\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"text-danger\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"password\"\r\n                      className={\r\n                        errors.password && touched.password\r\n                          ? \"form-control is-valid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      placeholder=\"Password\"\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                      <div className=\"text-danger\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <button\r\n                    htmlType=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["120","121","122","123","124"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport SearchFeature from \"./Sections/SearchFeature\";\r\n\r\nexport default function LandingPage() {\r\n  const [Products, setProducts] = useState([]);\r\n  const [Skip, setSkip] = useState(0);\r\n  const [Limit, setLimit] = useState(3);\r\n  const [PostSize, setPostSize] = useState(0);\r\n  const [SearchTerms, setSearchTerms] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n    };\r\n\r\n    getProducts(variables);\r\n  }, []);\r\n\r\n  const getProducts = (variables) => {\r\n    Axios.post(\"/api/product/getProducts\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        if (variables.loadMore) {\r\n          setProducts([...Products, ...response.data.products]);\r\n        } else {\r\n          setProducts(response.data.products);\r\n        }\r\n\r\n        setPostSize(response.data.postSize);\r\n\r\n        console.log(response.data.products);\r\n      } else {\r\n        alert(\"Failed to get products\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    let skip = Skip + Limit;\r\n\r\n    const variables = {\r\n      loadMore: true,\r\n      skip: skip,\r\n      limit: Limit,\r\n    };\r\n\r\n    getProducts(variables);\r\n    setSkip(skip);\r\n  };\r\n\r\n  const updateSearchTerms = (newSearchTerm) => {\r\n    const variables = {\r\n      skip: 0,\r\n      limit: Limit,\r\n      searchTerm: newSearchTerm,\r\n    };\r\n\r\n    setSkip(0);\r\n\r\n    setSearchTerms(newSearchTerm);\r\n    getProducts(variables);\r\n  };\r\n\r\n  const renderProducts = Products.map((product, index) => {\r\n    return (\r\n      <div className=\"col-md-4 mb-1 mt-3\">\r\n        <img\r\n          src={`http://localhost:5000/${product.images}`}\r\n          className=\"img-fluid\"\r\n          style={{ maxHeight: \"200px\", maxWidth: \"200px\" }}\r\n        />\r\n        <h4 className=\"product-name\">{product.title}</h4>\r\n        <p style={{ fontSize: \"14px\" }}>${product.price}</p>\r\n        <a\r\n          href={`/product/${product._id}`}\r\n          className=\"btn my-btn btn-sm buy-now\"\r\n        >\r\n          Detail\r\n        </a>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <section id=\"hero\" className=\"hero-section\">\r\n        <div className=\"container justify-content-center\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-sm-12 mt-5\">\r\n              <h2 className=\"tag-line\">Upcoming Product</h2>\r\n              <h3 className=\"sub-line\">\r\n                Playstation 4, it almost there, wait for it.\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 col-sm-12 mt-5\">\r\n              <img\r\n                className=\"img-fluid\"\r\n                src=\"http://localhost:3000/img/banner.png\"\r\n                alt=\"Responsive image\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section id=\"content\" className=\"content-section\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 p-sm-0\">\r\n              <div className=\"card card-details\">\r\n                <h1 className=\"text-center our-products mt-3\">Our Products</h1>\r\n\r\n                {Products.length === 0 ? (\r\n                  <p className=\"text-center\">There is no data </p>\r\n                ) : (\r\n                  <div className=\"row products text-center\">\r\n                    {renderProducts}\r\n                    <div className=\"col-md-12 justify-content-center\">\r\n                      {PostSize >= Limit && (\r\n                        <button\r\n                          onClick={onLoadMore}\r\n                          className=\"btn my-btn btn-sm load-more\"\r\n                        >\r\n                          Load More\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card card-details\">\r\n                <h2 className=\"text-center mt-2\">Search</h2>\r\n                <hr />\r\n                <SearchFeature refreshFunction={updateSearchTerms} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\hoc\\auth.js",["125","126"],"import React, { useEffect } from \"react\";\r\nimport { auth } from \"../_actions/user_actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  function AuthenticationCheck(props) {\r\n    let user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      //To know my current status, send Auth request\r\n      dispatch(auth()).then((response) => {\r\n        //Not Loggined in Status\r\n        if (!response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push(\"/login\");\r\n          }\r\n          //Loggined in Status\r\n        } else {\r\n          //supposed to be Admin page, but not admin person wants to go inside\r\n          if (adminRoute && !response.payload.isAdmin) {\r\n            props.history.push(\"/\");\r\n          }\r\n          //Logged in Status, but Try to go into log in page\r\n          else {\r\n            if (option === false) {\r\n              props.history.push(\"/\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return <SpecificComponent {...props} user={user} />;\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\Footer\\Footer.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\_reducers\\user_reducer.js",["127"],"import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH_USER,\r\n  LOGOUT_USER,\r\n  ADD_TO_CART_USER,\r\n  GET_CART_ITEMS_USER,\r\n  REMOVE_CART_ITEM_USER,\r\n  ON_SUCCESS_BUY_USER,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n\r\n    case LOGIN_USER:\r\n      return { ...state, loginSuccess: action.payload };\r\n\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n\r\n    case ADD_TO_CART_USER:\r\n      return {\r\n        ...state,\r\n        userData: {\r\n          ...state.userData,\r\n          cart: action.payload,\r\n        },\r\n      };\r\n\r\n    case GET_CART_ITEMS_USER:\r\n      return { ...state, cartDetail: action.payload };\r\n\r\n    case REMOVE_CART_ITEM_USER:\r\n      return {\r\n        ...state,\r\n        userData: {\r\n          ...state.userData,\r\n          cart: action.payload.cart,\r\n        },\r\n        cartDetail: action.payload.cartDetail,\r\n      };\r\n\r\n    case ON_SUCCESS_BUY_USER:\r\n      return {\r\n        ...state,\r\n        userData: {\r\n          ...state.userData,\r\n          cart: action.payload.cart,\r\n        },\r\n        cartDetail: action.payload.cartDetail,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\_actions\\types.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\_actions\\user_actions.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\Config.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\Navbar\\NavBar.js",["128","129","130","131","132"],"import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { USER_SERVER } from \"../../Config\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction NavBar(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const { userData } = user;\r\n\r\n  const logoutHandler = () => {\r\n    Axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Ps Store\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <Link to=\"/\" className=\"nav-link\" href=\"#\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item active\">\r\n                <Link to=\"/login\" className=\"nav-link\" href=\"#\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item active\">\r\n                <Link to=\"/register\" className=\"nav-link\" href=\"#\">\r\n                  Register\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Ps Store\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <Link to=\"/\" className=\"nav-link\" href=\"#\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  <i className=\"fas fa-shopping-cart fa-lg\"></i>\r\n                  <span className=\"badge badge-info ml-1\">1</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  History\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/login\" onClick={logoutHandler}>\r\n                  Logout\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\utils\\FileUpload.js",["133"],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\LandingPage\\Sections\\SearchFeature.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\DetailProductPage\\DetailProductPage.js",["134"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ProductImage from \"./Sections/ProductImage\";\r\nimport ProductInfo from \"./Sections/ProductInfo\";\r\nimport { addToCart } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function DetailProductPage(props) {\r\n  const { productId } = props.match.params;\r\n  const [Product, setProduct] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    Axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n      .then((response) => {\r\n        setProduct(response.data[0]);\r\n      })\r\n      .catch((err) => alert(err));\r\n  }, []);\r\n\r\n  const addToCartHandler = (productId) => {\r\n    dispatch(addToCart(productId));\r\n  };\r\n\r\n  return (\r\n    <div class=\"container mt-auto\">\r\n      <h2 class=\"text-center mb-3\" style={{ fontWeight: \"600\" }}>\r\n        {Product.title}\r\n      </h2>\r\n\r\n      <div class=\"row d-flex justify-content-center\">\r\n        <div class=\"col-md-6 col-sm-12\">\r\n          <ProductImage detail={Product} />\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-sm-12\">\r\n          <h4 style={{ fontWeight: \"600\" }}>Product Info :</h4>\r\n          <ProductInfo addToCart={addToCartHandler} detail={Product} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\DetailProductPage\\Sections\\ProductInfo.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\DetailProductPage\\Sections\\ProductImage.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\CartPage.js",["135","136"],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\utils\\Paypal.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\Sections\\UserCartBlock.js",["137","138"],"import React from \"react\";\r\n\r\nexport default function UserCartBlock(props) {\r\n  const { products, removeItem } = props;\r\n\r\n  const renderCartImage = (images) => {\r\n    if (images.length > 0) {\r\n      let image = images[0];\r\n      return `http://localhost:5000/${image}`;\r\n    }\r\n  };\r\n\r\n  const renderItems =\r\n    products &&\r\n    products.map((product) => (\r\n      <tr key={product._id}>\r\n        <td>\r\n          <img\r\n            src={renderCartImage(product.images)}\r\n            style={{ maxWidth: \"75px\", maxWidth: \"75px\" }}\r\n            className=\"img-fluid\"\r\n          />\r\n        </td>\r\n        <td>{product.title}</td>\r\n        <td>${product.price}</td>\r\n        <td>{product.quantity}</td>\r\n        <td>\r\n          <button\r\n            type=\"danger\"\r\n            onClick={() => {\r\n              removeItem(product._id);\r\n            }}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            <i className=\"fas fa-trash\"></i>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"table text-center\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Product Image</th>\r\n            <th scope=\"col\">Product Name</th>\r\n            <th scope=\"col\">Product Price</th>\r\n            <th scope=\"col\">Product Quantity</th>\r\n            <th scope=\"col\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderItems}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\Sections\\Result.js",[],"D:\\daffa\\projects\\pstore-mern\\client\\src\\components\\views\\CartPage\\Sections\\Empty.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":18,"column":7,"nodeType":"145","messageId":"146","endLine":18,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":82,"column":11,"nodeType":"145","messageId":"146","endLine":82,"endColumn":16},{"ruleId":"143","severity":1,"message":"148","line":87,"column":11,"nodeType":"145","messageId":"146","endLine":87,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":167,"column":23,"nodeType":"151","endLine":171,"endColumn":24},{"ruleId":"143","severity":1,"message":"152","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":14},{"ruleId":"143","severity":1,"message":"153","line":6,"column":16,"nodeType":"145","messageId":"146","endLine":6,"endColumn":20},{"ruleId":"143","severity":1,"message":"154","line":6,"column":22,"nodeType":"145","messageId":"146","endLine":6,"endColumn":27},{"ruleId":"143","severity":1,"message":"155","line":6,"column":29,"nodeType":"145","messageId":"146","endLine":6,"endColumn":35},{"ruleId":"143","severity":1,"message":"156","line":6,"column":37,"nodeType":"145","messageId":"146","endLine":6,"endColumn":45},{"ruleId":"143","severity":1,"message":"157","line":9,"column":9,"nodeType":"145","messageId":"146","endLine":9,"endColumn":14},{"ruleId":"143","severity":1,"message":"158","line":15,"column":10,"nodeType":"145","messageId":"146","endLine":15,"endColumn":26},{"ruleId":"143","severity":1,"message":"159","line":18,"column":9,"nodeType":"145","messageId":"146","endLine":18,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":76,"column":11,"nodeType":"145","messageId":"146","endLine":76,"endColumn":16},{"ruleId":"143","severity":1,"message":"148","line":81,"column":11,"nodeType":"145","messageId":"146","endLine":81,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":116,"column":23,"nodeType":"151","endLine":120,"endColumn":24},{"ruleId":"143","severity":1,"message":"160","line":8,"column":17,"nodeType":"145","messageId":"146","endLine":8,"endColumn":25},{"ruleId":"143","severity":1,"message":"161","line":10,"column":10,"nodeType":"145","messageId":"146","endLine":10,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":19,"column":6,"nodeType":"164","endLine":19,"endColumn":8,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":68,"column":9,"nodeType":"168","endLine":72,"endColumn":11},{"ruleId":"169","severity":1,"message":"170","line":98,"column":15,"nodeType":"168","endLine":102,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":5,"column":1,"nodeType":"173","endLine":37,"endColumn":2},{"ruleId":"162","severity":1,"message":"174","line":32,"column":8,"nodeType":"164","endLine":32,"endColumn":10,"suggestions":"175"},{"ruleId":"171","severity":1,"message":"172","line":12,"column":1,"nodeType":"173","endLine":61,"endColumn":2},{"ruleId":"143","severity":1,"message":"176","line":9,"column":11,"nodeType":"145","messageId":"146","endLine":9,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":25,"column":11,"nodeType":"168","endLine":25,"endColumn":48},{"ruleId":"177","severity":1,"message":"178","line":67,"column":11,"nodeType":"168","endLine":67,"endColumn":48},{"ruleId":"177","severity":1,"message":"178","line":90,"column":17,"nodeType":"168","endLine":90,"endColumn":50},{"ruleId":"177","severity":1,"message":"178","line":96,"column":17,"nodeType":"168","endLine":96,"endColumn":50},{"ruleId":"169","severity":1,"message":"170","line":75,"column":13,"nodeType":"168","endLine":79,"endColumn":15},{"ruleId":"162","severity":1,"message":"179","line":19,"column":6,"nodeType":"164","endLine":19,"endColumn":8,"suggestions":"180"},{"ruleId":"162","severity":1,"message":"181","line":31,"column":6,"nodeType":"164","endLine":31,"endColumn":27,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":42,"column":27,"nodeType":"185","messageId":"186","endLine":42,"endColumn":29},{"ruleId":"166","severity":1,"message":"167","line":18,"column":11,"nodeType":"168","endLine":22,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":20,"column":40,"nodeType":"189","messageId":"190","endLine":20,"endColumn":48},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'tailFormItemLayout' is assigned a value but never used.","Identifier","unusedVar","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Form' is defined but never used.","'Icon' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Title' is assigned a value but never used.","'formErrorMessage' is assigned a value but never used.","'handleRememberMe' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'SearchTerms' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Limit', 'Skip', and 'getProducts'. Either include them or remove the dependency array.","ArrayExpression",["193"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["194"],"'userData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["196"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'maxWidth'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [Limit, Skip, getProducts]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"207","text":"208"},"Update the dependencies array to be: [productId]",{"range":"209","text":"210"},"Update the dependencies array to be: [dispatch, props.user.userData]",{"range":"211","text":"212"},[545,547],"[Limit, Skip, getProducts]",[1089,1091],"[dispatch, props.history]",[687,689],"[productId]",[995,1016],"[dispatch, props.user.userData]"]